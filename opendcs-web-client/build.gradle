plugins {
    id "opendcs-rest-api.java-conventions"
    id "opendcs-rest-api.deps-conventions"
    id "opendcs-rest-api.publishing-conventions"
    id "war"
}

dependencies {
    implementation(libs.jetty.jsp)
    implementation(libs.servlet.api)
    implementation(libs.websocket)
    implementation(libs.slf4j.jdk)

    testImplementation(libs.selenium)
    testImplementation(libs.junit.api)
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.junit.jupiter)
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = war.archiveBaseName.get()
            from components.java
        }
    }
}

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    sonarqube {
        properties {
            property 'sonar.sources', 'src/main/java,src/main/webapp'
            property 'sonar.exclusions', 'src/main/webapp/resources/js/plugins/**,' +
                    'src/main/webapp/resources/js/jquery*,' +
                    'src/main/webapp/resources/js/bootstrap*,' +
                    'src/main/webapp/resources/js/limitless/*,' +
                    'src/main/webapp/resources/js/datatables/dataTables.rowReorder.min.js,' +
                    'src/main/webapp/resources/css/bootstrap*,' +
                    'src/main/webapp/resources/css/limitless/*,' +
                    'src/main/webapp/resources/css/icons/**'
        }
    }
}

tasks.register('integrationTest', Test) {
    group "verification"
    useJUnitPlatform {
        includeTags "integration"
    }
    shouldRunAfter test
    dependsOn war
    systemProperties += project.properties.findAll { k, v -> k.startsWith("opendcs") }
}

test {
    useJUnitPlatform {
        excludeTags "integration"
    }
}